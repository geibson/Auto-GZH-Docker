import net.masterthought.cucumber.Configuration

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.masterthought:cucumber-reporting:5.7.1"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.16.4"
        classpath 'org.testng:testng:7.6.0'
        classpath 'net.masterthought:maven-cucumber-reporting:5.7.0'
        classpath 'net.masterthought:cucumber-sandwich:5.6.1'
        classpath 'de.monochromata.cucumber:reporting-plugin:5.0.0'
        classpath 'me.jvt.cucumber:reporting-plugin:7.3.0'
        classpath 'io.github.fslev:cucumber-reporting-extended:5.4.9'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'

}
// Para execução atráves do docker
apply plugin: 'docker-compose'

repositories {
    mavenCentral()
}

ext {
    masterthought = '5.7.4'
    cucumber = '7.8.1'
    selenium = '4.6.0'
    hamcrest = '2.2'
    spring = '2.7.5'
    lombok = '1.18.24'
    lorem = '2.0.0'

    java = '7.8.1'
    junit = '7.8.1'
    annotations ='23.0.0'
    junit2 ='4.13.2'

}

dependencies {
    implementation "net.masterthought:cucumber-reporting:$masterthought"
    implementation "org.thshsh:lorem-ipsum-generator:$lorem"
    implementation 'org.projectlombok:maven-lombok-plugin:0.9.3.1'
    implementation 'org.projectlombok:lombok-maven-plugin:1.18.20.0'
    implementation 'io.cucumber:cucumber-gherkin:7.8.1'
    implementation 'org.testng:testng:7.1.0'
    testImplementation "io.cucumber:cucumber-java:$cucumber"
    implementation "io.cucumber:cucumber-testng:$cucumber"
    testImplementation "io.cucumber:cucumber-spring:$cucumber"

    testImplementation "org.seleniumhq.selenium:selenium-java:$selenium"
    testImplementation "org.seleniumhq.selenium:selenium-api:$selenium"

    testImplementation "org.hamcrest:hamcrest-library:$hamcrest"


    testImplementation "org.springframework.boot:spring-boot-starter-web:$spring"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$spring"

    testImplementation "org.projectlombok:lombok:$lombok"
    testAnnotationProcessor "org.projectlombok:lombok:$lombok"
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.8.1'
    implementation "io.cucumber:cucumber-java:$java"
    implementation "io.cucumber:cucumber-junit:$junit"
    implementation "org.jetbrains:annotations:$annotations"
    implementation "junit:junit:$junit2"

    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.6.0'
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.0')

}

def generateReport() {
    File reportOutputDirectory = new File("build/test-report")
    reportOutputDirectory.deleteDir()

    def jsonReports = fileTree(dir: "build/test-results").include '**/*.json'.toString()
    List<String> jsonReportFiles = new ArrayList<String>()
    jsonReports.each { File file ->
        jsonReportFiles.add("build/test-results/${file.name}".toString())
    }

    String projectName = project.name

    Configuration configuration = new Configuration(reportOutputDirectory, projectName)
    configuration.addClassifications("Version", project.version);

/*    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
    reportBuilder.generateReports()
    println("\nReport: file://" + reportOutputDirectory.getCanonicalPath() + "/cucumber-html-reports/overview-features.html")*/
}

task generateReport() {
    doLast {
        generateReport()
    }
}

test.finalizedBy generateReport

dockerCompose.isRequiredBy test

dockerCompose {
    useComposeFiles = ['docker-compose.yaml']
    scale = [chrome: 2]
}


sourceCompatibility = 11
targetCompatibility = 11
test {
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    useTestNG ()
    systemProperties(System.properties)
    scanForTestClasses = false
    testLogging.showStandardStreams = true
}

